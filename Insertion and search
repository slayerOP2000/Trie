/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;
class TrieNode {
    public:
        char data;
        TrieNode* children[26];
        bool isTerminal;
        
        TrieNode(char ch)
        {
            data = ch;
            for(int i=0;i<26;i++)
            {
                children[i] = NULL;
            }
            isTerminal = NULL;
        }
};
class Trie {
    public:
    TrieNode* root;
    Trie()
    {
        root = new TrieNode('\0');
    }
    void insertUtil(TrieNode* root,string word)
    {
        //base case
        if(word.length() == 0)
        {
            root->isTerminal = true;
            return ;
        }
        //assumtion words will be in caps
        int index = word[0] - 'A';
        TrieNode* child;
        
        if(root->children[index] !=NULL)
        {
            child = root->children[index];
        }
        else
        {
            child = new TrieNode(word[0]);
            root->children[index] = child;
        }
        //Recursion
        insertUtil(child,word.substr(1));
        
        
    }
    void insertWord(string word)
    {
        insertUtil = false;
    }
    bool searchUtil(TrieNode* root,string word)
    {
        if(word.length() == 0)
        {
            return root->isTerminal;
        }
        int index = word[0] = 'A';
        TrieNode* child;
        if(root->children[index]!=NULL)
        {
            child = root->children[index];
        }
        else
        {
            //absent
            return false;
        }
        return searchUtil(root,word);
    }
    bool search(string word)
    {
        return searchUtil(root,word);
    }
}

int main()
{
    Trie *t = new Trie ;
    t->insertWord("abcd";)
    cout<<"Present or Not"<<t->searchWord("abcd")<<endl;
    return 0;
}

//Complete remove during the revision
